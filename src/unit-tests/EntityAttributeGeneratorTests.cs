using System.Text;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.Text;
using Runedur.Generator;
using Xunit;
using VerifyCS = unit_tests.CSharpIncrementalGeneratorVerifier<Runedur.Generator.EntityAttributeGenerator>;

namespace unit_tests;

public class EntityAttributeGeneratorTests
{
    [Fact]
    public async Task GeneratesCorrectCode()
    {
        var version = typeof(AssemblyMarker).Assembly.GetName().Version!.ToString();
        
        var code = @"namespace Dummy;
public class DoesNotMatter {}";
        
        var generated = $@"// <auto-generated/>
namespace Runedur
{{
    /// <summary>
    /// Marks a class as an entity that Runedur should
    /// consider during code generation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(""Runedur"", ""{version}"")]
    [global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = false)]
    internal sealed class RunedurEntityAttribute : global::System.Attribute
    {{
    }}
}}";

        await new VerifyCS.Test
        {
            TestState =
            {
                Sources = { code },
                GeneratedSources =
                {
                    (
                        typeof(EntityAttributeGenerator),
                        "RunedurEntityAttribute.g.cs",
                        SourceText.From(generated, Encoding.UTF8, SourceHashAlgorithm.Sha1)
                    )
                }
            }
        }.RunAsync();
    }
}